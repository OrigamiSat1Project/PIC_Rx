Version 3.2 HI-TECH Software Intermediate Code
"2581 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16lf877a.h
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
[v F1089 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic.h
[v __delay `JF1089 ~T0 @X0 0 e ]
[p i __delay ]
"2595 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16lf877a.h
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"71
[v _STATUS `Vuc ~T0 @X0 0 e@3 ]
"18 UART.h
[v _putch `(v ~T0 @X0 0 ef1`uc ]
"16 decode_AX25.c
[v _reverse_bit8 `(uc ~T0 @X0 0 ef1`uc ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16lf877a.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16lf877a.h
[; ;pic16lf877a.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16lf877a.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16lf877a.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16lf877a.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16lf877a.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16lf877a.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16lf877a.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16lf877a.h: 76: typedef union {
[; ;pic16lf877a.h: 77: struct {
[; ;pic16lf877a.h: 78: unsigned C :1;
[; ;pic16lf877a.h: 79: unsigned DC :1;
[; ;pic16lf877a.h: 80: unsigned Z :1;
[; ;pic16lf877a.h: 81: unsigned nPD :1;
[; ;pic16lf877a.h: 82: unsigned nTO :1;
[; ;pic16lf877a.h: 83: unsigned RP :2;
[; ;pic16lf877a.h: 84: unsigned IRP :1;
[; ;pic16lf877a.h: 85: };
[; ;pic16lf877a.h: 86: struct {
[; ;pic16lf877a.h: 87: unsigned :5;
[; ;pic16lf877a.h: 88: unsigned RP0 :1;
[; ;pic16lf877a.h: 89: unsigned RP1 :1;
[; ;pic16lf877a.h: 90: };
[; ;pic16lf877a.h: 91: struct {
[; ;pic16lf877a.h: 92: unsigned CARRY :1;
[; ;pic16lf877a.h: 93: unsigned :1;
[; ;pic16lf877a.h: 94: unsigned ZERO :1;
[; ;pic16lf877a.h: 95: };
[; ;pic16lf877a.h: 96: } STATUSbits_t;
[; ;pic16lf877a.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16lf877a.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16lf877a.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16lf877a.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16lf877a.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16lf877a.h: 169: typedef union {
[; ;pic16lf877a.h: 170: struct {
[; ;pic16lf877a.h: 171: unsigned RA0 :1;
[; ;pic16lf877a.h: 172: unsigned RA1 :1;
[; ;pic16lf877a.h: 173: unsigned RA2 :1;
[; ;pic16lf877a.h: 174: unsigned RA3 :1;
[; ;pic16lf877a.h: 175: unsigned RA4 :1;
[; ;pic16lf877a.h: 176: unsigned RA5 :1;
[; ;pic16lf877a.h: 177: };
[; ;pic16lf877a.h: 178: } PORTAbits_t;
[; ;pic16lf877a.h: 179: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16lf877a.h: 214: extern volatile unsigned char PORTB @ 0x006;
"216
[; ;pic16lf877a.h: 216: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16lf877a.h: 219: typedef union {
[; ;pic16lf877a.h: 220: struct {
[; ;pic16lf877a.h: 221: unsigned RB0 :1;
[; ;pic16lf877a.h: 222: unsigned RB1 :1;
[; ;pic16lf877a.h: 223: unsigned RB2 :1;
[; ;pic16lf877a.h: 224: unsigned RB3 :1;
[; ;pic16lf877a.h: 225: unsigned RB4 :1;
[; ;pic16lf877a.h: 226: unsigned RB5 :1;
[; ;pic16lf877a.h: 227: unsigned RB6 :1;
[; ;pic16lf877a.h: 228: unsigned RB7 :1;
[; ;pic16lf877a.h: 229: };
[; ;pic16lf877a.h: 230: } PORTBbits_t;
[; ;pic16lf877a.h: 231: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16lf877a.h: 276: extern volatile unsigned char PORTC @ 0x007;
"278
[; ;pic16lf877a.h: 278: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16lf877a.h: 281: typedef union {
[; ;pic16lf877a.h: 282: struct {
[; ;pic16lf877a.h: 283: unsigned RC0 :1;
[; ;pic16lf877a.h: 284: unsigned RC1 :1;
[; ;pic16lf877a.h: 285: unsigned RC2 :1;
[; ;pic16lf877a.h: 286: unsigned RC3 :1;
[; ;pic16lf877a.h: 287: unsigned RC4 :1;
[; ;pic16lf877a.h: 288: unsigned RC5 :1;
[; ;pic16lf877a.h: 289: unsigned RC6 :1;
[; ;pic16lf877a.h: 290: unsigned RC7 :1;
[; ;pic16lf877a.h: 291: };
[; ;pic16lf877a.h: 292: } PORTCbits_t;
[; ;pic16lf877a.h: 293: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16lf877a.h: 338: extern volatile unsigned char PORTD @ 0x008;
"340
[; ;pic16lf877a.h: 340: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16lf877a.h: 343: typedef union {
[; ;pic16lf877a.h: 344: struct {
[; ;pic16lf877a.h: 345: unsigned RD0 :1;
[; ;pic16lf877a.h: 346: unsigned RD1 :1;
[; ;pic16lf877a.h: 347: unsigned RD2 :1;
[; ;pic16lf877a.h: 348: unsigned RD3 :1;
[; ;pic16lf877a.h: 349: unsigned RD4 :1;
[; ;pic16lf877a.h: 350: unsigned RD5 :1;
[; ;pic16lf877a.h: 351: unsigned RD6 :1;
[; ;pic16lf877a.h: 352: unsigned RD7 :1;
[; ;pic16lf877a.h: 353: };
[; ;pic16lf877a.h: 354: } PORTDbits_t;
[; ;pic16lf877a.h: 355: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16lf877a.h: 400: extern volatile unsigned char PORTE @ 0x009;
"402
[; ;pic16lf877a.h: 402: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16lf877a.h: 405: typedef union {
[; ;pic16lf877a.h: 406: struct {
[; ;pic16lf877a.h: 407: unsigned RE0 :1;
[; ;pic16lf877a.h: 408: unsigned RE1 :1;
[; ;pic16lf877a.h: 409: unsigned RE2 :1;
[; ;pic16lf877a.h: 410: };
[; ;pic16lf877a.h: 411: } PORTEbits_t;
[; ;pic16lf877a.h: 412: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16lf877a.h: 432: extern volatile unsigned char PCLATH @ 0x00A;
"434
[; ;pic16lf877a.h: 434: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16lf877a.h: 437: typedef union {
[; ;pic16lf877a.h: 438: struct {
[; ;pic16lf877a.h: 439: unsigned PCLATH :5;
[; ;pic16lf877a.h: 440: };
[; ;pic16lf877a.h: 441: } PCLATHbits_t;
[; ;pic16lf877a.h: 442: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16lf877a.h: 452: extern volatile unsigned char INTCON @ 0x00B;
"454
[; ;pic16lf877a.h: 454: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16lf877a.h: 457: typedef union {
[; ;pic16lf877a.h: 458: struct {
[; ;pic16lf877a.h: 459: unsigned RBIF :1;
[; ;pic16lf877a.h: 460: unsigned INTF :1;
[; ;pic16lf877a.h: 461: unsigned TMR0IF :1;
[; ;pic16lf877a.h: 462: unsigned RBIE :1;
[; ;pic16lf877a.h: 463: unsigned INTE :1;
[; ;pic16lf877a.h: 464: unsigned TMR0IE :1;
[; ;pic16lf877a.h: 465: unsigned PEIE :1;
[; ;pic16lf877a.h: 466: unsigned GIE :1;
[; ;pic16lf877a.h: 467: };
[; ;pic16lf877a.h: 468: struct {
[; ;pic16lf877a.h: 469: unsigned :2;
[; ;pic16lf877a.h: 470: unsigned T0IF :1;
[; ;pic16lf877a.h: 471: unsigned :2;
[; ;pic16lf877a.h: 472: unsigned T0IE :1;
[; ;pic16lf877a.h: 473: };
[; ;pic16lf877a.h: 474: } INTCONbits_t;
[; ;pic16lf877a.h: 475: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16lf877a.h: 530: extern volatile unsigned char PIR1 @ 0x00C;
"532
[; ;pic16lf877a.h: 532: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16lf877a.h: 535: typedef union {
[; ;pic16lf877a.h: 536: struct {
[; ;pic16lf877a.h: 537: unsigned TMR1IF :1;
[; ;pic16lf877a.h: 538: unsigned TMR2IF :1;
[; ;pic16lf877a.h: 539: unsigned CCP1IF :1;
[; ;pic16lf877a.h: 540: unsigned SSPIF :1;
[; ;pic16lf877a.h: 541: unsigned TXIF :1;
[; ;pic16lf877a.h: 542: unsigned RCIF :1;
[; ;pic16lf877a.h: 543: unsigned ADIF :1;
[; ;pic16lf877a.h: 544: unsigned PSPIF :1;
[; ;pic16lf877a.h: 545: };
[; ;pic16lf877a.h: 546: } PIR1bits_t;
[; ;pic16lf877a.h: 547: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16lf877a.h: 592: extern volatile unsigned char PIR2 @ 0x00D;
"594
[; ;pic16lf877a.h: 594: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16lf877a.h: 597: typedef union {
[; ;pic16lf877a.h: 598: struct {
[; ;pic16lf877a.h: 599: unsigned CCP2IF :1;
[; ;pic16lf877a.h: 600: unsigned :2;
[; ;pic16lf877a.h: 601: unsigned BCLIF :1;
[; ;pic16lf877a.h: 602: unsigned EEIF :1;
[; ;pic16lf877a.h: 603: unsigned :1;
[; ;pic16lf877a.h: 604: unsigned CMIF :1;
[; ;pic16lf877a.h: 605: };
[; ;pic16lf877a.h: 606: } PIR2bits_t;
[; ;pic16lf877a.h: 607: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16lf877a.h: 632: extern volatile unsigned short TMR1 @ 0x00E;
"634
[; ;pic16lf877a.h: 634: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16lf877a.h: 639: extern volatile unsigned char TMR1L @ 0x00E;
"641
[; ;pic16lf877a.h: 641: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16lf877a.h: 646: extern volatile unsigned char TMR1H @ 0x00F;
"648
[; ;pic16lf877a.h: 648: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16lf877a.h: 653: extern volatile unsigned char T1CON @ 0x010;
"655
[; ;pic16lf877a.h: 655: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16lf877a.h: 658: typedef union {
[; ;pic16lf877a.h: 659: struct {
[; ;pic16lf877a.h: 660: unsigned TMR1ON :1;
[; ;pic16lf877a.h: 661: unsigned TMR1CS :1;
[; ;pic16lf877a.h: 662: unsigned nT1SYNC :1;
[; ;pic16lf877a.h: 663: unsigned T1OSCEN :1;
[; ;pic16lf877a.h: 664: unsigned T1CKPS :2;
[; ;pic16lf877a.h: 665: };
[; ;pic16lf877a.h: 666: struct {
[; ;pic16lf877a.h: 667: unsigned :2;
[; ;pic16lf877a.h: 668: unsigned T1SYNC :1;
[; ;pic16lf877a.h: 669: unsigned :1;
[; ;pic16lf877a.h: 670: unsigned T1CKPS0 :1;
[; ;pic16lf877a.h: 671: unsigned T1CKPS1 :1;
[; ;pic16lf877a.h: 672: };
[; ;pic16lf877a.h: 673: struct {
[; ;pic16lf877a.h: 674: unsigned :2;
[; ;pic16lf877a.h: 675: unsigned T1INSYNC :1;
[; ;pic16lf877a.h: 676: };
[; ;pic16lf877a.h: 677: } T1CONbits_t;
[; ;pic16lf877a.h: 678: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16lf877a.h: 728: extern volatile unsigned char TMR2 @ 0x011;
"730
[; ;pic16lf877a.h: 730: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16lf877a.h: 735: extern volatile unsigned char T2CON @ 0x012;
"737
[; ;pic16lf877a.h: 737: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16lf877a.h: 740: typedef union {
[; ;pic16lf877a.h: 741: struct {
[; ;pic16lf877a.h: 742: unsigned T2CKPS :2;
[; ;pic16lf877a.h: 743: unsigned TMR2ON :1;
[; ;pic16lf877a.h: 744: unsigned TOUTPS :4;
[; ;pic16lf877a.h: 745: };
[; ;pic16lf877a.h: 746: struct {
[; ;pic16lf877a.h: 747: unsigned T2CKPS0 :1;
[; ;pic16lf877a.h: 748: unsigned T2CKPS1 :1;
[; ;pic16lf877a.h: 749: unsigned :1;
[; ;pic16lf877a.h: 750: unsigned TOUTPS0 :1;
[; ;pic16lf877a.h: 751: unsigned TOUTPS1 :1;
[; ;pic16lf877a.h: 752: unsigned TOUTPS2 :1;
[; ;pic16lf877a.h: 753: unsigned TOUTPS3 :1;
[; ;pic16lf877a.h: 754: };
[; ;pic16lf877a.h: 755: } T2CONbits_t;
[; ;pic16lf877a.h: 756: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16lf877a.h: 806: extern volatile unsigned char SSPBUF @ 0x013;
"808
[; ;pic16lf877a.h: 808: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16lf877a.h: 813: extern volatile unsigned char SSPCON @ 0x014;
"815
[; ;pic16lf877a.h: 815: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16lf877a.h: 818: typedef union {
[; ;pic16lf877a.h: 819: struct {
[; ;pic16lf877a.h: 820: unsigned SSPM :4;
[; ;pic16lf877a.h: 821: unsigned CKP :1;
[; ;pic16lf877a.h: 822: unsigned SSPEN :1;
[; ;pic16lf877a.h: 823: unsigned SSPOV :1;
[; ;pic16lf877a.h: 824: unsigned WCOL :1;
[; ;pic16lf877a.h: 825: };
[; ;pic16lf877a.h: 826: struct {
[; ;pic16lf877a.h: 827: unsigned SSPM0 :1;
[; ;pic16lf877a.h: 828: unsigned SSPM1 :1;
[; ;pic16lf877a.h: 829: unsigned SSPM2 :1;
[; ;pic16lf877a.h: 830: unsigned SSPM3 :1;
[; ;pic16lf877a.h: 831: };
[; ;pic16lf877a.h: 832: } SSPCONbits_t;
[; ;pic16lf877a.h: 833: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16lf877a.h: 883: extern volatile unsigned short CCPR1 @ 0x015;
"885
[; ;pic16lf877a.h: 885: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16lf877a.h: 890: extern volatile unsigned char CCPR1L @ 0x015;
"892
[; ;pic16lf877a.h: 892: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16lf877a.h: 897: extern volatile unsigned char CCPR1H @ 0x016;
"899
[; ;pic16lf877a.h: 899: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16lf877a.h: 904: extern volatile unsigned char CCP1CON @ 0x017;
"906
[; ;pic16lf877a.h: 906: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16lf877a.h: 909: typedef union {
[; ;pic16lf877a.h: 910: struct {
[; ;pic16lf877a.h: 911: unsigned CCP1M :4;
[; ;pic16lf877a.h: 912: unsigned CCP1Y :1;
[; ;pic16lf877a.h: 913: unsigned CCP1X :1;
[; ;pic16lf877a.h: 914: };
[; ;pic16lf877a.h: 915: struct {
[; ;pic16lf877a.h: 916: unsigned CCP1M0 :1;
[; ;pic16lf877a.h: 917: unsigned CCP1M1 :1;
[; ;pic16lf877a.h: 918: unsigned CCP1M2 :1;
[; ;pic16lf877a.h: 919: unsigned CCP1M3 :1;
[; ;pic16lf877a.h: 920: };
[; ;pic16lf877a.h: 921: } CCP1CONbits_t;
[; ;pic16lf877a.h: 922: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16lf877a.h: 962: extern volatile unsigned char RCSTA @ 0x018;
"964
[; ;pic16lf877a.h: 964: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16lf877a.h: 967: typedef union {
[; ;pic16lf877a.h: 968: struct {
[; ;pic16lf877a.h: 969: unsigned RX9D :1;
[; ;pic16lf877a.h: 970: unsigned OERR :1;
[; ;pic16lf877a.h: 971: unsigned FERR :1;
[; ;pic16lf877a.h: 972: unsigned ADDEN :1;
[; ;pic16lf877a.h: 973: unsigned CREN :1;
[; ;pic16lf877a.h: 974: unsigned SREN :1;
[; ;pic16lf877a.h: 975: unsigned RX9 :1;
[; ;pic16lf877a.h: 976: unsigned SPEN :1;
[; ;pic16lf877a.h: 977: };
[; ;pic16lf877a.h: 978: struct {
[; ;pic16lf877a.h: 979: unsigned RCD8 :1;
[; ;pic16lf877a.h: 980: unsigned :5;
[; ;pic16lf877a.h: 981: unsigned RC9 :1;
[; ;pic16lf877a.h: 982: };
[; ;pic16lf877a.h: 983: struct {
[; ;pic16lf877a.h: 984: unsigned :6;
[; ;pic16lf877a.h: 985: unsigned nRC8 :1;
[; ;pic16lf877a.h: 986: };
[; ;pic16lf877a.h: 987: struct {
[; ;pic16lf877a.h: 988: unsigned :6;
[; ;pic16lf877a.h: 989: unsigned RC8_9 :1;
[; ;pic16lf877a.h: 990: };
[; ;pic16lf877a.h: 991: } RCSTAbits_t;
[; ;pic16lf877a.h: 992: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16lf877a.h: 1057: extern volatile unsigned char TXREG @ 0x019;
"1059
[; ;pic16lf877a.h: 1059: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16lf877a.h: 1064: extern volatile unsigned char RCREG @ 0x01A;
"1066
[; ;pic16lf877a.h: 1066: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16lf877a.h: 1071: extern volatile unsigned short CCPR2 @ 0x01B;
"1073
[; ;pic16lf877a.h: 1073: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16lf877a.h: 1078: extern volatile unsigned char CCPR2L @ 0x01B;
"1080
[; ;pic16lf877a.h: 1080: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16lf877a.h: 1085: extern volatile unsigned char CCPR2H @ 0x01C;
"1087
[; ;pic16lf877a.h: 1087: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16lf877a.h: 1092: extern volatile unsigned char CCP2CON @ 0x01D;
"1094
[; ;pic16lf877a.h: 1094: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16lf877a.h: 1097: typedef union {
[; ;pic16lf877a.h: 1098: struct {
[; ;pic16lf877a.h: 1099: unsigned CCP2M :4;
[; ;pic16lf877a.h: 1100: unsigned CCP2Y :1;
[; ;pic16lf877a.h: 1101: unsigned CCP2X :1;
[; ;pic16lf877a.h: 1102: };
[; ;pic16lf877a.h: 1103: struct {
[; ;pic16lf877a.h: 1104: unsigned CCP2M0 :1;
[; ;pic16lf877a.h: 1105: unsigned CCP2M1 :1;
[; ;pic16lf877a.h: 1106: unsigned CCP2M2 :1;
[; ;pic16lf877a.h: 1107: unsigned CCP2M3 :1;
[; ;pic16lf877a.h: 1108: };
[; ;pic16lf877a.h: 1109: } CCP2CONbits_t;
[; ;pic16lf877a.h: 1110: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16lf877a.h: 1150: extern volatile unsigned char ADRESH @ 0x01E;
"1152
[; ;pic16lf877a.h: 1152: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16lf877a.h: 1157: extern volatile unsigned char ADCON0 @ 0x01F;
"1159
[; ;pic16lf877a.h: 1159: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16lf877a.h: 1162: typedef union {
[; ;pic16lf877a.h: 1163: struct {
[; ;pic16lf877a.h: 1164: unsigned ADON :1;
[; ;pic16lf877a.h: 1165: unsigned :1;
[; ;pic16lf877a.h: 1166: unsigned GO_nDONE :1;
[; ;pic16lf877a.h: 1167: unsigned CHS :3;
[; ;pic16lf877a.h: 1168: unsigned ADCS :2;
[; ;pic16lf877a.h: 1169: };
[; ;pic16lf877a.h: 1170: struct {
[; ;pic16lf877a.h: 1171: unsigned :2;
[; ;pic16lf877a.h: 1172: unsigned GO :1;
[; ;pic16lf877a.h: 1173: unsigned CHS0 :1;
[; ;pic16lf877a.h: 1174: unsigned CHS1 :1;
[; ;pic16lf877a.h: 1175: unsigned CHS2 :1;
[; ;pic16lf877a.h: 1176: unsigned ADCS0 :1;
[; ;pic16lf877a.h: 1177: unsigned ADCS1 :1;
[; ;pic16lf877a.h: 1178: };
[; ;pic16lf877a.h: 1179: struct {
[; ;pic16lf877a.h: 1180: unsigned :2;
[; ;pic16lf877a.h: 1181: unsigned nDONE :1;
[; ;pic16lf877a.h: 1182: };
[; ;pic16lf877a.h: 1183: struct {
[; ;pic16lf877a.h: 1184: unsigned :2;
[; ;pic16lf877a.h: 1185: unsigned GO_DONE :1;
[; ;pic16lf877a.h: 1186: };
[; ;pic16lf877a.h: 1187: } ADCON0bits_t;
[; ;pic16lf877a.h: 1188: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16lf877a.h: 1253: extern volatile unsigned char OPTION_REG @ 0x081;
"1255
[; ;pic16lf877a.h: 1255: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16lf877a.h: 1258: typedef union {
[; ;pic16lf877a.h: 1259: struct {
[; ;pic16lf877a.h: 1260: unsigned PS :3;
[; ;pic16lf877a.h: 1261: unsigned PSA :1;
[; ;pic16lf877a.h: 1262: unsigned T0SE :1;
[; ;pic16lf877a.h: 1263: unsigned T0CS :1;
[; ;pic16lf877a.h: 1264: unsigned INTEDG :1;
[; ;pic16lf877a.h: 1265: unsigned nRBPU :1;
[; ;pic16lf877a.h: 1266: };
[; ;pic16lf877a.h: 1267: struct {
[; ;pic16lf877a.h: 1268: unsigned PS0 :1;
[; ;pic16lf877a.h: 1269: unsigned PS1 :1;
[; ;pic16lf877a.h: 1270: unsigned PS2 :1;
[; ;pic16lf877a.h: 1271: };
[; ;pic16lf877a.h: 1272: } OPTION_REGbits_t;
[; ;pic16lf877a.h: 1273: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16lf877a.h: 1323: extern volatile unsigned char TRISA @ 0x085;
"1325
[; ;pic16lf877a.h: 1325: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16lf877a.h: 1328: typedef union {
[; ;pic16lf877a.h: 1329: struct {
[; ;pic16lf877a.h: 1330: unsigned TRISA0 :1;
[; ;pic16lf877a.h: 1331: unsigned TRISA1 :1;
[; ;pic16lf877a.h: 1332: unsigned TRISA2 :1;
[; ;pic16lf877a.h: 1333: unsigned TRISA3 :1;
[; ;pic16lf877a.h: 1334: unsigned TRISA4 :1;
[; ;pic16lf877a.h: 1335: unsigned TRISA5 :1;
[; ;pic16lf877a.h: 1336: };
[; ;pic16lf877a.h: 1337: } TRISAbits_t;
[; ;pic16lf877a.h: 1338: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16lf877a.h: 1373: extern volatile unsigned char TRISB @ 0x086;
"1375
[; ;pic16lf877a.h: 1375: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16lf877a.h: 1378: typedef union {
[; ;pic16lf877a.h: 1379: struct {
[; ;pic16lf877a.h: 1380: unsigned TRISB0 :1;
[; ;pic16lf877a.h: 1381: unsigned TRISB1 :1;
[; ;pic16lf877a.h: 1382: unsigned TRISB2 :1;
[; ;pic16lf877a.h: 1383: unsigned TRISB3 :1;
[; ;pic16lf877a.h: 1384: unsigned TRISB4 :1;
[; ;pic16lf877a.h: 1385: unsigned TRISB5 :1;
[; ;pic16lf877a.h: 1386: unsigned TRISB6 :1;
[; ;pic16lf877a.h: 1387: unsigned TRISB7 :1;
[; ;pic16lf877a.h: 1388: };
[; ;pic16lf877a.h: 1389: } TRISBbits_t;
[; ;pic16lf877a.h: 1390: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16lf877a.h: 1435: extern volatile unsigned char TRISC @ 0x087;
"1437
[; ;pic16lf877a.h: 1437: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16lf877a.h: 1440: typedef union {
[; ;pic16lf877a.h: 1441: struct {
[; ;pic16lf877a.h: 1442: unsigned TRISC0 :1;
[; ;pic16lf877a.h: 1443: unsigned TRISC1 :1;
[; ;pic16lf877a.h: 1444: unsigned TRISC2 :1;
[; ;pic16lf877a.h: 1445: unsigned TRISC3 :1;
[; ;pic16lf877a.h: 1446: unsigned TRISC4 :1;
[; ;pic16lf877a.h: 1447: unsigned TRISC5 :1;
[; ;pic16lf877a.h: 1448: unsigned TRISC6 :1;
[; ;pic16lf877a.h: 1449: unsigned TRISC7 :1;
[; ;pic16lf877a.h: 1450: };
[; ;pic16lf877a.h: 1451: } TRISCbits_t;
[; ;pic16lf877a.h: 1452: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16lf877a.h: 1497: extern volatile unsigned char TRISD @ 0x088;
"1499
[; ;pic16lf877a.h: 1499: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16lf877a.h: 1502: typedef union {
[; ;pic16lf877a.h: 1503: struct {
[; ;pic16lf877a.h: 1504: unsigned TRISD0 :1;
[; ;pic16lf877a.h: 1505: unsigned TRISD1 :1;
[; ;pic16lf877a.h: 1506: unsigned TRISD2 :1;
[; ;pic16lf877a.h: 1507: unsigned TRISD3 :1;
[; ;pic16lf877a.h: 1508: unsigned TRISD4 :1;
[; ;pic16lf877a.h: 1509: unsigned TRISD5 :1;
[; ;pic16lf877a.h: 1510: unsigned TRISD6 :1;
[; ;pic16lf877a.h: 1511: unsigned TRISD7 :1;
[; ;pic16lf877a.h: 1512: };
[; ;pic16lf877a.h: 1513: } TRISDbits_t;
[; ;pic16lf877a.h: 1514: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16lf877a.h: 1559: extern volatile unsigned char TRISE @ 0x089;
"1561
[; ;pic16lf877a.h: 1561: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16lf877a.h: 1564: typedef union {
[; ;pic16lf877a.h: 1565: struct {
[; ;pic16lf877a.h: 1566: unsigned TRISE0 :1;
[; ;pic16lf877a.h: 1567: unsigned TRISE1 :1;
[; ;pic16lf877a.h: 1568: unsigned TRISE2 :1;
[; ;pic16lf877a.h: 1569: unsigned :1;
[; ;pic16lf877a.h: 1570: unsigned PSPMODE :1;
[; ;pic16lf877a.h: 1571: unsigned IBOV :1;
[; ;pic16lf877a.h: 1572: unsigned OBF :1;
[; ;pic16lf877a.h: 1573: unsigned IBF :1;
[; ;pic16lf877a.h: 1574: };
[; ;pic16lf877a.h: 1575: } TRISEbits_t;
[; ;pic16lf877a.h: 1576: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16lf877a.h: 1616: extern volatile unsigned char PIE1 @ 0x08C;
"1618
[; ;pic16lf877a.h: 1618: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16lf877a.h: 1621: typedef union {
[; ;pic16lf877a.h: 1622: struct {
[; ;pic16lf877a.h: 1623: unsigned TMR1IE :1;
[; ;pic16lf877a.h: 1624: unsigned TMR2IE :1;
[; ;pic16lf877a.h: 1625: unsigned CCP1IE :1;
[; ;pic16lf877a.h: 1626: unsigned SSPIE :1;
[; ;pic16lf877a.h: 1627: unsigned TXIE :1;
[; ;pic16lf877a.h: 1628: unsigned RCIE :1;
[; ;pic16lf877a.h: 1629: unsigned ADIE :1;
[; ;pic16lf877a.h: 1630: unsigned PSPIE :1;
[; ;pic16lf877a.h: 1631: };
[; ;pic16lf877a.h: 1632: } PIE1bits_t;
[; ;pic16lf877a.h: 1633: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16lf877a.h: 1678: extern volatile unsigned char PIE2 @ 0x08D;
"1680
[; ;pic16lf877a.h: 1680: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16lf877a.h: 1683: typedef union {
[; ;pic16lf877a.h: 1684: struct {
[; ;pic16lf877a.h: 1685: unsigned CCP2IE :1;
[; ;pic16lf877a.h: 1686: unsigned :2;
[; ;pic16lf877a.h: 1687: unsigned BCLIE :1;
[; ;pic16lf877a.h: 1688: unsigned EEIE :1;
[; ;pic16lf877a.h: 1689: unsigned :1;
[; ;pic16lf877a.h: 1690: unsigned CMIE :1;
[; ;pic16lf877a.h: 1691: };
[; ;pic16lf877a.h: 1692: } PIE2bits_t;
[; ;pic16lf877a.h: 1693: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16lf877a.h: 1718: extern volatile unsigned char PCON @ 0x08E;
"1720
[; ;pic16lf877a.h: 1720: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16lf877a.h: 1723: typedef union {
[; ;pic16lf877a.h: 1724: struct {
[; ;pic16lf877a.h: 1725: unsigned nBOR :1;
[; ;pic16lf877a.h: 1726: unsigned nPOR :1;
[; ;pic16lf877a.h: 1727: };
[; ;pic16lf877a.h: 1728: struct {
[; ;pic16lf877a.h: 1729: unsigned nBO :1;
[; ;pic16lf877a.h: 1730: };
[; ;pic16lf877a.h: 1731: } PCONbits_t;
[; ;pic16lf877a.h: 1732: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16lf877a.h: 1752: extern volatile unsigned char SSPCON2 @ 0x091;
"1754
[; ;pic16lf877a.h: 1754: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16lf877a.h: 1757: typedef union {
[; ;pic16lf877a.h: 1758: struct {
[; ;pic16lf877a.h: 1759: unsigned SEN :1;
[; ;pic16lf877a.h: 1760: unsigned RSEN :1;
[; ;pic16lf877a.h: 1761: unsigned PEN :1;
[; ;pic16lf877a.h: 1762: unsigned RCEN :1;
[; ;pic16lf877a.h: 1763: unsigned ACKEN :1;
[; ;pic16lf877a.h: 1764: unsigned ACKDT :1;
[; ;pic16lf877a.h: 1765: unsigned ACKSTAT :1;
[; ;pic16lf877a.h: 1766: unsigned GCEN :1;
[; ;pic16lf877a.h: 1767: };
[; ;pic16lf877a.h: 1768: } SSPCON2bits_t;
[; ;pic16lf877a.h: 1769: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16lf877a.h: 1814: extern volatile unsigned char PR2 @ 0x092;
"1816
[; ;pic16lf877a.h: 1816: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16lf877a.h: 1821: extern volatile unsigned char SSPADD @ 0x093;
"1823
[; ;pic16lf877a.h: 1823: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16lf877a.h: 1828: extern volatile unsigned char SSPSTAT @ 0x094;
"1830
[; ;pic16lf877a.h: 1830: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16lf877a.h: 1833: typedef union {
[; ;pic16lf877a.h: 1834: struct {
[; ;pic16lf877a.h: 1835: unsigned BF :1;
[; ;pic16lf877a.h: 1836: unsigned UA :1;
[; ;pic16lf877a.h: 1837: unsigned R_nW :1;
[; ;pic16lf877a.h: 1838: unsigned S :1;
[; ;pic16lf877a.h: 1839: unsigned P :1;
[; ;pic16lf877a.h: 1840: unsigned D_nA :1;
[; ;pic16lf877a.h: 1841: unsigned CKE :1;
[; ;pic16lf877a.h: 1842: unsigned SMP :1;
[; ;pic16lf877a.h: 1843: };
[; ;pic16lf877a.h: 1844: struct {
[; ;pic16lf877a.h: 1845: unsigned :2;
[; ;pic16lf877a.h: 1846: unsigned R :1;
[; ;pic16lf877a.h: 1847: unsigned :2;
[; ;pic16lf877a.h: 1848: unsigned D :1;
[; ;pic16lf877a.h: 1849: };
[; ;pic16lf877a.h: 1850: struct {
[; ;pic16lf877a.h: 1851: unsigned :2;
[; ;pic16lf877a.h: 1852: unsigned I2C_READ :1;
[; ;pic16lf877a.h: 1853: unsigned I2C_START :1;
[; ;pic16lf877a.h: 1854: unsigned I2C_STOP :1;
[; ;pic16lf877a.h: 1855: unsigned I2C_DATA :1;
[; ;pic16lf877a.h: 1856: };
[; ;pic16lf877a.h: 1857: struct {
[; ;pic16lf877a.h: 1858: unsigned :2;
[; ;pic16lf877a.h: 1859: unsigned nW :1;
[; ;pic16lf877a.h: 1860: unsigned :2;
[; ;pic16lf877a.h: 1861: unsigned nA :1;
[; ;pic16lf877a.h: 1862: };
[; ;pic16lf877a.h: 1863: struct {
[; ;pic16lf877a.h: 1864: unsigned :2;
[; ;pic16lf877a.h: 1865: unsigned nWRITE :1;
[; ;pic16lf877a.h: 1866: unsigned :2;
[; ;pic16lf877a.h: 1867: unsigned nADDRESS :1;
[; ;pic16lf877a.h: 1868: };
[; ;pic16lf877a.h: 1869: struct {
[; ;pic16lf877a.h: 1870: unsigned :2;
[; ;pic16lf877a.h: 1871: unsigned R_W :1;
[; ;pic16lf877a.h: 1872: unsigned :2;
[; ;pic16lf877a.h: 1873: unsigned D_A :1;
[; ;pic16lf877a.h: 1874: };
[; ;pic16lf877a.h: 1875: struct {
[; ;pic16lf877a.h: 1876: unsigned :2;
[; ;pic16lf877a.h: 1877: unsigned READ_WRITE :1;
[; ;pic16lf877a.h: 1878: unsigned :2;
[; ;pic16lf877a.h: 1879: unsigned DATA_ADDRESS :1;
[; ;pic16lf877a.h: 1880: };
[; ;pic16lf877a.h: 1881: } SSPSTATbits_t;
[; ;pic16lf877a.h: 1882: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16lf877a.h: 1997: extern volatile unsigned char TXSTA @ 0x098;
"1999
[; ;pic16lf877a.h: 1999: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16lf877a.h: 2002: typedef union {
[; ;pic16lf877a.h: 2003: struct {
[; ;pic16lf877a.h: 2004: unsigned TX9D :1;
[; ;pic16lf877a.h: 2005: unsigned TRMT :1;
[; ;pic16lf877a.h: 2006: unsigned BRGH :1;
[; ;pic16lf877a.h: 2007: unsigned :1;
[; ;pic16lf877a.h: 2008: unsigned SYNC :1;
[; ;pic16lf877a.h: 2009: unsigned TXEN :1;
[; ;pic16lf877a.h: 2010: unsigned TX9 :1;
[; ;pic16lf877a.h: 2011: unsigned CSRC :1;
[; ;pic16lf877a.h: 2012: };
[; ;pic16lf877a.h: 2013: struct {
[; ;pic16lf877a.h: 2014: unsigned TXD8 :1;
[; ;pic16lf877a.h: 2015: unsigned :5;
[; ;pic16lf877a.h: 2016: unsigned nTX8 :1;
[; ;pic16lf877a.h: 2017: };
[; ;pic16lf877a.h: 2018: struct {
[; ;pic16lf877a.h: 2019: unsigned :6;
[; ;pic16lf877a.h: 2020: unsigned TX8_9 :1;
[; ;pic16lf877a.h: 2021: };
[; ;pic16lf877a.h: 2022: } TXSTAbits_t;
[; ;pic16lf877a.h: 2023: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16lf877a.h: 2078: extern volatile unsigned char SPBRG @ 0x099;
"2080
[; ;pic16lf877a.h: 2080: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16lf877a.h: 2085: extern volatile unsigned char CMCON @ 0x09C;
"2087
[; ;pic16lf877a.h: 2087: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16lf877a.h: 2090: typedef union {
[; ;pic16lf877a.h: 2091: struct {
[; ;pic16lf877a.h: 2092: unsigned CM :3;
[; ;pic16lf877a.h: 2093: unsigned CIS :1;
[; ;pic16lf877a.h: 2094: unsigned C1INV :1;
[; ;pic16lf877a.h: 2095: unsigned C2INV :1;
[; ;pic16lf877a.h: 2096: unsigned C1OUT :1;
[; ;pic16lf877a.h: 2097: unsigned C2OUT :1;
[; ;pic16lf877a.h: 2098: };
[; ;pic16lf877a.h: 2099: struct {
[; ;pic16lf877a.h: 2100: unsigned CM0 :1;
[; ;pic16lf877a.h: 2101: unsigned CM1 :1;
[; ;pic16lf877a.h: 2102: unsigned CM2 :1;
[; ;pic16lf877a.h: 2103: };
[; ;pic16lf877a.h: 2104: } CMCONbits_t;
[; ;pic16lf877a.h: 2105: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16lf877a.h: 2155: extern volatile unsigned char CVRCON @ 0x09D;
"2157
[; ;pic16lf877a.h: 2157: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16lf877a.h: 2160: typedef union {
[; ;pic16lf877a.h: 2161: struct {
[; ;pic16lf877a.h: 2162: unsigned CVR :4;
[; ;pic16lf877a.h: 2163: unsigned :1;
[; ;pic16lf877a.h: 2164: unsigned CVRR :1;
[; ;pic16lf877a.h: 2165: unsigned CVROE :1;
[; ;pic16lf877a.h: 2166: unsigned CVREN :1;
[; ;pic16lf877a.h: 2167: };
[; ;pic16lf877a.h: 2168: struct {
[; ;pic16lf877a.h: 2169: unsigned CVR0 :1;
[; ;pic16lf877a.h: 2170: unsigned CVR1 :1;
[; ;pic16lf877a.h: 2171: unsigned CVR2 :1;
[; ;pic16lf877a.h: 2172: unsigned CVR3 :1;
[; ;pic16lf877a.h: 2173: };
[; ;pic16lf877a.h: 2174: } CVRCONbits_t;
[; ;pic16lf877a.h: 2175: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16lf877a.h: 2220: extern volatile unsigned char ADRESL @ 0x09E;
"2222
[; ;pic16lf877a.h: 2222: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16lf877a.h: 2227: extern volatile unsigned char ADCON1 @ 0x09F;
"2229
[; ;pic16lf877a.h: 2229: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16lf877a.h: 2232: typedef union {
[; ;pic16lf877a.h: 2233: struct {
[; ;pic16lf877a.h: 2234: unsigned PCFG :4;
[; ;pic16lf877a.h: 2235: unsigned :2;
[; ;pic16lf877a.h: 2236: unsigned ADCS2 :1;
[; ;pic16lf877a.h: 2237: unsigned ADFM :1;
[; ;pic16lf877a.h: 2238: };
[; ;pic16lf877a.h: 2239: struct {
[; ;pic16lf877a.h: 2240: unsigned PCFG0 :1;
[; ;pic16lf877a.h: 2241: unsigned PCFG1 :1;
[; ;pic16lf877a.h: 2242: unsigned PCFG2 :1;
[; ;pic16lf877a.h: 2243: unsigned PCFG3 :1;
[; ;pic16lf877a.h: 2244: };
[; ;pic16lf877a.h: 2245: } ADCON1bits_t;
[; ;pic16lf877a.h: 2246: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16lf877a.h: 2286: extern volatile unsigned char EEDATA @ 0x10C;
"2288
[; ;pic16lf877a.h: 2288: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16lf877a.h: 2293: extern volatile unsigned char EEADR @ 0x10D;
"2295
[; ;pic16lf877a.h: 2295: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16lf877a.h: 2300: extern volatile unsigned char EEDATH @ 0x10E;
"2302
[; ;pic16lf877a.h: 2302: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16lf877a.h: 2307: extern volatile unsigned char EEADRH @ 0x10F;
"2309
[; ;pic16lf877a.h: 2309: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16lf877a.h: 2314: extern volatile unsigned char EECON1 @ 0x18C;
"2316
[; ;pic16lf877a.h: 2316: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16lf877a.h: 2319: typedef union {
[; ;pic16lf877a.h: 2320: struct {
[; ;pic16lf877a.h: 2321: unsigned RD :1;
[; ;pic16lf877a.h: 2322: unsigned WR :1;
[; ;pic16lf877a.h: 2323: unsigned WREN :1;
[; ;pic16lf877a.h: 2324: unsigned WRERR :1;
[; ;pic16lf877a.h: 2325: unsigned :3;
[; ;pic16lf877a.h: 2326: unsigned EEPGD :1;
[; ;pic16lf877a.h: 2327: };
[; ;pic16lf877a.h: 2328: } EECON1bits_t;
[; ;pic16lf877a.h: 2329: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16lf877a.h: 2359: extern volatile unsigned char EECON2 @ 0x18D;
"2361
[; ;pic16lf877a.h: 2361: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16lf877a.h: 2371: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16lf877a.h: 2373: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16lf877a.h: 2375: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16lf877a.h: 2377: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16lf877a.h: 2379: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16lf877a.h: 2381: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16lf877a.h: 2383: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16lf877a.h: 2385: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16lf877a.h: 2387: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16lf877a.h: 2389: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16lf877a.h: 2391: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16lf877a.h: 2393: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16lf877a.h: 2395: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16lf877a.h: 2397: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16lf877a.h: 2399: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16lf877a.h: 2401: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16lf877a.h: 2403: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16lf877a.h: 2405: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16lf877a.h: 2407: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16lf877a.h: 2409: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16lf877a.h: 2411: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16lf877a.h: 2413: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16lf877a.h: 2415: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16lf877a.h: 2417: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16lf877a.h: 2419: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16lf877a.h: 2421: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16lf877a.h: 2423: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16lf877a.h: 2425: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16lf877a.h: 2427: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16lf877a.h: 2429: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16lf877a.h: 2431: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16lf877a.h: 2433: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16lf877a.h: 2435: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16lf877a.h: 2437: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16lf877a.h: 2439: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16lf877a.h: 2441: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16lf877a.h: 2443: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16lf877a.h: 2445: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16lf877a.h: 2447: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16lf877a.h: 2449: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16lf877a.h: 2451: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16lf877a.h: 2453: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16lf877a.h: 2455: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16lf877a.h: 2457: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16lf877a.h: 2459: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16lf877a.h: 2461: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16lf877a.h: 2463: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16lf877a.h: 2465: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16lf877a.h: 2467: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16lf877a.h: 2469: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16lf877a.h: 2471: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16lf877a.h: 2473: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16lf877a.h: 2475: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16lf877a.h: 2477: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16lf877a.h: 2479: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16lf877a.h: 2481: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16lf877a.h: 2483: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16lf877a.h: 2485: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16lf877a.h: 2487: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16lf877a.h: 2489: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16lf877a.h: 2491: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16lf877a.h: 2493: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16lf877a.h: 2495: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16lf877a.h: 2497: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16lf877a.h: 2499: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16lf877a.h: 2501: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16lf877a.h: 2503: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16lf877a.h: 2505: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16lf877a.h: 2507: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16lf877a.h: 2509: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16lf877a.h: 2511: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16lf877a.h: 2513: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16lf877a.h: 2515: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16lf877a.h: 2517: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16lf877a.h: 2519: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16lf877a.h: 2521: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16lf877a.h: 2523: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16lf877a.h: 2525: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16lf877a.h: 2527: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16lf877a.h: 2529: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16lf877a.h: 2531: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16lf877a.h: 2533: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16lf877a.h: 2535: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16lf877a.h: 2537: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16lf877a.h: 2539: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16lf877a.h: 2541: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16lf877a.h: 2543: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16lf877a.h: 2545: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16lf877a.h: 2547: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16lf877a.h: 2549: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16lf877a.h: 2551: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16lf877a.h: 2553: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16lf877a.h: 2555: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16lf877a.h: 2557: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16lf877a.h: 2559: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16lf877a.h: 2561: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16lf877a.h: 2563: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16lf877a.h: 2565: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16lf877a.h: 2567: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16lf877a.h: 2569: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16lf877a.h: 2571: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16lf877a.h: 2573: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16lf877a.h: 2575: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16lf877a.h: 2577: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16lf877a.h: 2579: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16lf877a.h: 2581: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16lf877a.h: 2583: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16lf877a.h: 2585: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16lf877a.h: 2587: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16lf877a.h: 2589: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16lf877a.h: 2591: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16lf877a.h: 2593: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16lf877a.h: 2595: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16lf877a.h: 2597: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16lf877a.h: 2599: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16lf877a.h: 2601: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16lf877a.h: 2603: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16lf877a.h: 2605: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16lf877a.h: 2607: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16lf877a.h: 2609: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16lf877a.h: 2611: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16lf877a.h: 2613: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16lf877a.h: 2615: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16lf877a.h: 2617: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16lf877a.h: 2619: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16lf877a.h: 2621: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16lf877a.h: 2623: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16lf877a.h: 2625: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16lf877a.h: 2627: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16lf877a.h: 2629: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16lf877a.h: 2631: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16lf877a.h: 2633: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16lf877a.h: 2635: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16lf877a.h: 2637: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16lf877a.h: 2639: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16lf877a.h: 2641: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16lf877a.h: 2643: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16lf877a.h: 2645: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16lf877a.h: 2647: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16lf877a.h: 2649: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16lf877a.h: 2651: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16lf877a.h: 2653: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16lf877a.h: 2655: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16lf877a.h: 2657: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16lf877a.h: 2659: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16lf877a.h: 2661: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16lf877a.h: 2663: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16lf877a.h: 2665: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16lf877a.h: 2667: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16lf877a.h: 2669: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16lf877a.h: 2671: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16lf877a.h: 2673: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16lf877a.h: 2675: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16lf877a.h: 2677: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16lf877a.h: 2679: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16lf877a.h: 2681: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16lf877a.h: 2683: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16lf877a.h: 2685: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16lf877a.h: 2687: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16lf877a.h: 2689: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16lf877a.h: 2691: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16lf877a.h: 2693: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16lf877a.h: 2695: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16lf877a.h: 2697: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16lf877a.h: 2699: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16lf877a.h: 2701: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16lf877a.h: 2703: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16lf877a.h: 2705: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16lf877a.h: 2707: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16lf877a.h: 2709: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16lf877a.h: 2711: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16lf877a.h: 2713: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16lf877a.h: 2715: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16lf877a.h: 2717: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16lf877a.h: 2719: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16lf877a.h: 2721: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16lf877a.h: 2723: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16lf877a.h: 2725: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16lf877a.h: 2727: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16lf877a.h: 2729: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16lf877a.h: 2731: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16lf877a.h: 2733: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16lf877a.h: 2735: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16lf877a.h: 2737: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16lf877a.h: 2739: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16lf877a.h: 2741: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16lf877a.h: 2743: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16lf877a.h: 2745: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16lf877a.h: 2747: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16lf877a.h: 2749: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16lf877a.h: 2751: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16lf877a.h: 2753: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16lf877a.h: 2755: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16lf877a.h: 2757: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16lf877a.h: 2759: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16lf877a.h: 2761: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16lf877a.h: 2763: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16lf877a.h: 2765: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16lf877a.h: 2767: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16lf877a.h: 2769: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16lf877a.h: 2771: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16lf877a.h: 2773: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16lf877a.h: 2775: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16lf877a.h: 2777: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16lf877a.h: 2779: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16lf877a.h: 2781: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16lf877a.h: 2783: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16lf877a.h: 2785: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16lf877a.h: 2787: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16lf877a.h: 2789: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16lf877a.h: 2791: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16lf877a.h: 2793: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16lf877a.h: 2795: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16lf877a.h: 2797: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16lf877a.h: 2799: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16lf877a.h: 2801: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16lf877a.h: 2803: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16lf877a.h: 2805: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16lf877a.h: 2807: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16lf877a.h: 2809: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16lf877a.h: 2811: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16lf877a.h: 2813: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16lf877a.h: 2815: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16lf877a.h: 2817: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16lf877a.h: 2819: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16lf877a.h: 2821: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16lf877a.h: 2823: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16lf877a.h: 2825: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16lf877a.h: 2827: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16lf877a.h: 2829: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16lf877a.h: 2831: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16lf877a.h: 2833: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16lf877a.h: 2835: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16lf877a.h: 2837: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16lf877a.h: 2839: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16lf877a.h: 2841: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16lf877a.h: 2843: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16lf877a.h: 2845: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16lf877a.h: 2847: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16lf877a.h: 2849: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16lf877a.h: 2851: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16lf877a.h: 2853: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
[; ;Type_define.h: 15: typedef signed char SBYTE;
[; ;Type_define.h: 16: typedef unsigned char UBYTE;
[; ;Type_define.h: 17: typedef signed short SWORD;
[; ;Type_define.h: 18: typedef unsigned short UWORD;
[; ;Type_define.h: 19: typedef signed int SINT;
[; ;Type_define.h: 20: typedef unsigned int UINT;
[; ;Type_define.h: 21: typedef unsigned short long USLONG;
[; ;Type_define.h: 22: typedef signed long SDWORD;
[; ;Type_define.h: 23: typedef unsigned long UDWORD;
[; ;UART.h: 17: void Init_SERIAL(void);
[; ;UART.h: 18: void putch(UBYTE c);
[; ;UART.h: 19: void putString(UBYTE *);
[; ;UART.h: 20: UBYTE getch(void);
[; ;UART.h: 21: void putcrlf(void);
[; ;UART.h: 23: void put_error(void);
[; ;UART.h: 24: void put_ok(void);
[; ;UART.h: 25: void NM_waddress(UBYTE, UBYTE, UBYTE);
[; ;UART.h: 26: void sendCommand(UBYTE, UBYTE, UBYTE,UBYTE, UBYTE, UBYTE);
[; ;Init_MPU.h: 24: void Init_MPU(void);
[; ;Init_MPU.h: 25: void led_onoff(void);
[; ;Init_MPU.h: 26: void debug_ledy(void);
[; ;time.h: 23: void delay_ms(UWORD);
[; ;time.h: 24: void delay_us(UWORD);
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;decode_AX25.h: 38: UINT getbit(void);
[; ;decode_AX25.h: 46: void ReceivePacket(void);
[; ;decode_AX25.h: 47: UBYTE *ReceivePacket_data(void);
[; ;encode_AX25.h: 24: void SendPacket(void);
[; ;decode_AX25.c: 10: void UART_TX(UINT,UINT);
[; ;decode_AX25.c: 11: void waitByte(UINT,UINT);
[; ;decode_AX25.c: 12: UINT getbit(void);
[; ;decode_AX25.c: 13: void waitFlag(void);
[; ;decode_AX25.c: 14: void getdata(void);
[; ;decode_AX25.c: 15: void conv_DI_UARTRX(void);
[; ;decode_AX25.c: 16: UBYTE reverse_bit8(UBYTE x);
"25 decode_AX25.c
[v _rcv_state `ui ~T0 @X0 1 s ]
[i _rcv_state
-> -> 0 `i `ui
]
[; ;decode_AX25.c: 25: static UINT rcv_state = 0;
"26
[v _dPacket `uc ~T0 @X0 -> 52 `i e ]
[; ;decode_AX25.c: 26: UBYTE dPacket[52];
"27
[v _dData `uc ~T0 @X0 -> 32 `i e ]
[; ;decode_AX25.c: 27: UBYTE dData[32];
"28
[v _dPacketnum `ui ~T0 @X0 1 e ]
[i _dPacketnum
-> -> 0 `i `ui
]
[; ;decode_AX25.c: 28: UINT dPacketnum = 0;
"29
[v _dfcshi `uc ~T0 @X0 1 e ]
[v _dfcslo `uc ~T0 @X0 1 e ]
[; ;decode_AX25.c: 29: UBYTE dfcshi, dfcslo;
[; ;decode_AX25.c: 31: UINT getbit(void);
[; ;decode_AX25.c: 32: void waitFlag(void);
[; ;decode_AX25.c: 33: void getdata(void);
[; ;decode_AX25.c: 34: UINT fcscheck(void);
[; ;decode_AX25.c: 35: void putAX25(void);
[; ;decode_AX25.c: 36: void conv_DI_UARTRX(void);
"40
[v _getbit `(ui ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 40: UINT getbit(void){
[e :U _getbit ]
[f ]
"41
[v F1357 `ui ~T0 @X0 1 s oldbit ]
[; ;decode_AX25.c: 41: static UINT oldbit;
[; ;decode_AX25.c: 42: oldbit = RB5;
"42
[e = F1357 -> -> _RB5 `i `ui ]
[; ;decode_AX25.c: 43: for(UINT i=0;i<62;i++){
"43
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 62 `i `ui 101  ]
[e $U 102  ]
[e :U 101 ]
{
[; ;decode_AX25.c: 44: if(RB5 != oldbit){
"44
[e $ ! != -> -> _RB5 `i `ui F1357 104  ]
{
[; ;decode_AX25.c: 45: _delay((unsigned long)((400)*(10000000/4000000.0)));
"45
[e ( __delay (1 -> * -> -> 400 `i `d / -> -> 10000000 `l `d .4000000.0 `ul ]
[; ;decode_AX25.c: 46: RC2= 1- RC2;
"46
[e = _RC2 -> - -> 1 `i -> _RC2 `i `b ]
[; ;decode_AX25.c: 47: return 0;
"47
[e ) -> -> 0 `i `ui ]
[e $UE 100  ]
"48
}
[e :U 104 ]
"49
}
"43
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 62 `i `ui 101  ]
[e :U 102 ]
"49
}
[; ;decode_AX25.c: 48: }
[; ;decode_AX25.c: 49: }
[; ;decode_AX25.c: 50: return 1;
"50
[e ) -> -> 1 `i `ui ]
[e $UE 100  ]
[; ;decode_AX25.c: 51: }
"51
[e :UE 100 ]
}
"54
[v _waitFlag `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 54: void waitFlag(void){
[e :U _waitFlag ]
[f ]
"55
[v _flag_judge `ui ~T0 @X0 1 a ]
"56
[v _buf `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 55: UINT flag_judge;
[; ;decode_AX25.c: 56: UBYTE buf = 0xff;
[e = _buf -> -> 255 `i `uc ]
[; ;decode_AX25.c: 57: rcv_state = 0;
"57
[e = _rcv_state -> -> 0 `i `ui ]
[; ;decode_AX25.c: 58: while(rcv_state < 2){
"58
[e $U 106  ]
[e :U 107 ]
{
[; ;decode_AX25.c: 59: while(buf != 0x7e){
"59
[e $U 109  ]
[e :U 110 ]
{
[; ;decode_AX25.c: 60: flag_judge = getbit();
"60
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 61: buf = buf << 1;
"61
[e = _buf -> << -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 62: if(flag_judge == 0){
"62
[e $ ! == _flag_judge -> -> 0 `i `ui 112  ]
{
[; ;decode_AX25.c: 63: buf = buf | 0x00;
"63
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"64
}
[; ;decode_AX25.c: 64: }else{
[e $U 113  ]
[e :U 112 ]
{
[; ;decode_AX25.c: 65: buf = buf | 0x01;
"65
[e = _buf -> | -> _buf `i -> 1 `i `uc ]
"66
}
[e :U 113 ]
"67
}
[e :U 109 ]
"59
[e $ != -> _buf `i -> 126 `i 110  ]
[e :U 111 ]
[; ;decode_AX25.c: 66: }
[; ;decode_AX25.c: 67: }
[; ;decode_AX25.c: 71: while(buf == 0x7e){
"71
[e $U 114  ]
[e :U 115 ]
{
[; ;decode_AX25.c: 72: for(UINT i=0;i<8;i++){
"72
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 117  ]
[e $U 118  ]
[e :U 117 ]
{
[; ;decode_AX25.c: 73: flag_judge = getbit();
"73
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 74: buf = buf >> 1;
"74
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 75: if(flag_judge == 0){
"75
[e $ ! == _flag_judge -> -> 0 `i `ui 120  ]
{
[; ;decode_AX25.c: 76: buf = buf | 0x00;
"76
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"77
}
[; ;decode_AX25.c: 77: }else{
[e $U 121  ]
[e :U 120 ]
{
[; ;decode_AX25.c: 78: buf = buf | 0x80;
"78
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"79
}
[e :U 121 ]
"80
}
"72
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 117  ]
[e :U 118 ]
"80
}
"81
}
[e :U 114 ]
"71
[e $ == -> _buf `i -> 126 `i 115  ]
[e :U 116 ]
[; ;decode_AX25.c: 79: }
[; ;decode_AX25.c: 80: }
[; ;decode_AX25.c: 81: }
[; ;decode_AX25.c: 82: if(buf == ("JS1YAX"[0] << 1)){
"82
[e $ ! == -> _buf `i << -> *U + :s 1C * -> -> 0 `i `x -> -> # *U :s 1C `i `x `i -> 1 `i 122  ]
{
[; ;decode_AX25.c: 83: dPacket[dPacketnum] = buf;
"83
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 84: dPacketnum ++;
"84
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 85: for(UINT j=0;j<8;j++){
"85
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 123  ]
[e $U 124  ]
[e :U 123 ]
{
[; ;decode_AX25.c: 86: flag_judge = getbit();
"86
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 87: buf = buf >> 1;
"87
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 88: if(flag_judge == 0){
"88
[e $ ! == _flag_judge -> -> 0 `i `ui 126  ]
{
[; ;decode_AX25.c: 89: buf = buf | 0x00;
"89
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"90
}
[; ;decode_AX25.c: 90: }else{
[e $U 127  ]
[e :U 126 ]
{
[; ;decode_AX25.c: 91: buf = buf | 0x80;
"91
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"92
}
[e :U 127 ]
"93
}
"85
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 123  ]
[e :U 124 ]
"93
}
[; ;decode_AX25.c: 92: }
[; ;decode_AX25.c: 93: }
[; ;decode_AX25.c: 94: if(buf == ("JS1YAX"[1] << 1)){
"94
[e $ ! == -> _buf `i << -> *U + :s 2C * -> -> 1 `i `x -> -> # *U :s 2C `i `x `i -> 1 `i 128  ]
{
[; ;decode_AX25.c: 95: dPacket[dPacketnum] = buf;
"95
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 96: dPacketnum ++;
"96
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 97: for(UINT j=0;j<8;j++){
"97
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 129  ]
[e $U 130  ]
[e :U 129 ]
{
[; ;decode_AX25.c: 98: flag_judge = getbit();
"98
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 99: buf = buf >> 1;
"99
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 100: if(flag_judge == 0){
"100
[e $ ! == _flag_judge -> -> 0 `i `ui 132  ]
{
[; ;decode_AX25.c: 101: buf = buf | 0x00;
"101
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"102
}
[; ;decode_AX25.c: 102: }else{
[e $U 133  ]
[e :U 132 ]
{
[; ;decode_AX25.c: 103: buf = buf | 0x80;
"103
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"104
}
[e :U 133 ]
"105
}
"97
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 129  ]
[e :U 130 ]
"105
}
[; ;decode_AX25.c: 104: }
[; ;decode_AX25.c: 105: }
[; ;decode_AX25.c: 106: if(buf == ("JS1YAX"[2] << 1)){
"106
[e $ ! == -> _buf `i << -> *U + :s 3C * -> -> 2 `i `x -> -> # *U :s 3C `i `x `i -> 1 `i 134  ]
{
[; ;decode_AX25.c: 107: dPacket[dPacketnum] = buf;
"107
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 108: dPacketnum ++;
"108
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 109: for(UINT j=0;j<8;j++){
"109
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 135  ]
[e $U 136  ]
[e :U 135 ]
{
[; ;decode_AX25.c: 110: flag_judge = getbit();
"110
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 111: buf = buf >> 1;
"111
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 112: if(flag_judge == 0){
"112
[e $ ! == _flag_judge -> -> 0 `i `ui 138  ]
{
[; ;decode_AX25.c: 113: buf = buf | 0x00;
"113
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"114
}
[; ;decode_AX25.c: 114: }else{
[e $U 139  ]
[e :U 138 ]
{
[; ;decode_AX25.c: 115: buf = buf | 0x80;
"115
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"116
}
[e :U 139 ]
"117
}
"109
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 135  ]
[e :U 136 ]
"117
}
[; ;decode_AX25.c: 116: }
[; ;decode_AX25.c: 117: }
[; ;decode_AX25.c: 118: if(buf == ("JS1YAX"[3] << 1)){
"118
[e $ ! == -> _buf `i << -> *U + :s 4C * -> -> 3 `i `x -> -> # *U :s 4C `i `x `i -> 1 `i 140  ]
{
[; ;decode_AX25.c: 119: dPacket[dPacketnum] = buf;
"119
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 120: dPacketnum ++;
"120
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 121: for(UINT j=0;j<8;j++){
"121
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 141  ]
[e $U 142  ]
[e :U 141 ]
{
[; ;decode_AX25.c: 122: flag_judge = getbit();
"122
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 123: buf = buf >> 1;
"123
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 124: if(flag_judge == 0){
"124
[e $ ! == _flag_judge -> -> 0 `i `ui 144  ]
{
[; ;decode_AX25.c: 125: buf = buf | 0x00;
"125
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"126
}
[; ;decode_AX25.c: 126: }else{
[e $U 145  ]
[e :U 144 ]
{
[; ;decode_AX25.c: 127: buf = buf | 0x80;
"127
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"128
}
[e :U 145 ]
"129
}
"121
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 141  ]
[e :U 142 ]
"129
}
[; ;decode_AX25.c: 128: }
[; ;decode_AX25.c: 129: }
[; ;decode_AX25.c: 130: if(buf == ("JS1YAX"[4] << 1)){
"130
[e $ ! == -> _buf `i << -> *U + :s 5C * -> -> 4 `i `x -> -> # *U :s 5C `i `x `i -> 1 `i 146  ]
{
[; ;decode_AX25.c: 131: dPacket[dPacketnum] = buf;
"131
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 132: dPacketnum ++;
"132
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 133: for(UINT j=0;j<8;j++){
"133
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 147  ]
[e $U 148  ]
[e :U 147 ]
{
[; ;decode_AX25.c: 134: flag_judge = getbit();
"134
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 135: buf = buf >> 1;
"135
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 136: if(flag_judge == 0){
"136
[e $ ! == _flag_judge -> -> 0 `i `ui 150  ]
{
[; ;decode_AX25.c: 137: buf = buf | 0x00;
"137
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"138
}
[; ;decode_AX25.c: 138: }else{
[e $U 151  ]
[e :U 150 ]
{
[; ;decode_AX25.c: 139: buf = buf | 0x80;
"139
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"140
}
[e :U 151 ]
"141
}
"133
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 147  ]
[e :U 148 ]
"141
}
[; ;decode_AX25.c: 140: }
[; ;decode_AX25.c: 141: }
[; ;decode_AX25.c: 142: if(buf == ("JS1YAX"[5] << 1)){
"142
[e $ ! == -> _buf `i << -> *U + :s 6C * -> -> 5 `i `x -> -> # *U :s 6C `i `x `i -> 1 `i 152  ]
{
[; ;decode_AX25.c: 143: dPacket[dPacketnum] = buf;
"143
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 144: dPacketnum ++;
"144
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 145: rcv_state ++;
"145
[e ++ _rcv_state -> -> 1 `i `ui ]
"146
}
[; ;decode_AX25.c: 146: }else{
[e $U 153  ]
[e :U 152 ]
{
[; ;decode_AX25.c: 147: dPacketnum = 0;
"147
[e = _dPacketnum -> -> 0 `i `ui ]
"148
}
[e :U 153 ]
"149
}
[; ;decode_AX25.c: 148: }
[; ;decode_AX25.c: 149: }else{
[e $U 154  ]
[e :U 146 ]
{
[; ;decode_AX25.c: 150: dPacketnum = 0;
"150
[e = _dPacketnum -> -> 0 `i `ui ]
"151
}
[e :U 154 ]
"152
}
[; ;decode_AX25.c: 151: }
[; ;decode_AX25.c: 152: }else{
[e $U 155  ]
[e :U 140 ]
{
[; ;decode_AX25.c: 153: dPacketnum = 0;
"153
[e = _dPacketnum -> -> 0 `i `ui ]
"154
}
[e :U 155 ]
"155
}
[; ;decode_AX25.c: 154: }
[; ;decode_AX25.c: 155: }else{
[e $U 156  ]
[e :U 134 ]
{
[; ;decode_AX25.c: 156: dPacketnum = 0;
"156
[e = _dPacketnum -> -> 0 `i `ui ]
"157
}
[e :U 156 ]
"158
}
[; ;decode_AX25.c: 157: }
[; ;decode_AX25.c: 158: }else{
[e $U 157  ]
[e :U 128 ]
{
[; ;decode_AX25.c: 159: dPacketnum = 0;
"159
[e = _dPacketnum -> -> 0 `i `ui ]
"160
}
[e :U 157 ]
"161
}
[; ;decode_AX25.c: 160: }
[; ;decode_AX25.c: 161: }else{
[e $U 158  ]
[e :U 122 ]
{
[; ;decode_AX25.c: 162: dPacketnum = 0;
"162
[e = _dPacketnum -> -> 0 `i `ui ]
"163
}
[e :U 158 ]
[; ;decode_AX25.c: 163: }
[; ;decode_AX25.c: 165: for(UINT j=0;j<8;j++){
"165
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 159  ]
[e $U 160  ]
[e :U 159 ]
{
[; ;decode_AX25.c: 166: flag_judge = getbit();
"166
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 167: buf = buf >> 1;
"167
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 168: if(flag_judge == 0){
"168
[e $ ! == _flag_judge -> -> 0 `i `ui 162  ]
{
[; ;decode_AX25.c: 169: buf = buf | 0x00;
"169
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"170
}
[; ;decode_AX25.c: 170: }else{
[e $U 163  ]
[e :U 162 ]
{
[; ;decode_AX25.c: 171: buf = buf | 0x80;
"171
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"172
}
[e :U 163 ]
"173
}
"165
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 159  ]
[e :U 160 ]
"173
}
[; ;decode_AX25.c: 172: }
[; ;decode_AX25.c: 173: }
[; ;decode_AX25.c: 174: dPacket[dPacketnum] = buf;
"174
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 175: dPacketnum ++;
"175
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 176: for(UINT j=0;j<8;j++){
"176
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 164  ]
[e $U 165  ]
[e :U 164 ]
{
[; ;decode_AX25.c: 177: flag_judge = getbit();
"177
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 178: buf = buf >> 1;
"178
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 179: if(flag_judge == 0){
"179
[e $ ! == _flag_judge -> -> 0 `i `ui 167  ]
{
[; ;decode_AX25.c: 180: buf = buf | 0x00;
"180
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"181
}
[; ;decode_AX25.c: 181: }else{
[e $U 168  ]
[e :U 167 ]
{
[; ;decode_AX25.c: 182: buf = buf | 0x80;
"182
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"183
}
[e :U 168 ]
"184
}
"176
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 164  ]
[e :U 165 ]
"184
}
[; ;decode_AX25.c: 183: }
[; ;decode_AX25.c: 184: }
[; ;decode_AX25.c: 185: if(buf == ("JQ1YCZ"[0] << 1)){
"185
[e $ ! == -> _buf `i << -> *U + :s 7C * -> -> 0 `i `x -> -> # *U :s 7C `i `x `i -> 1 `i 169  ]
{
[; ;decode_AX25.c: 186: dPacket[dPacketnum] = buf;
"186
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 187: dPacketnum ++;
"187
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 188: for(UINT j=0;j<8;j++){
"188
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 170  ]
[e $U 171  ]
[e :U 170 ]
{
[; ;decode_AX25.c: 189: flag_judge = getbit();
"189
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 190: buf = buf >> 1;
"190
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 191: if(flag_judge == 0){
"191
[e $ ! == _flag_judge -> -> 0 `i `ui 173  ]
{
[; ;decode_AX25.c: 192: buf = buf | 0x00;
"192
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"193
}
[; ;decode_AX25.c: 193: }else{
[e $U 174  ]
[e :U 173 ]
{
[; ;decode_AX25.c: 194: buf = buf | 0x80;
"194
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"195
}
[e :U 174 ]
"196
}
"188
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 170  ]
[e :U 171 ]
"196
}
[; ;decode_AX25.c: 195: }
[; ;decode_AX25.c: 196: }
[; ;decode_AX25.c: 197: if(buf == ("JQ1YCZ"[1] << 1)){
"197
[e $ ! == -> _buf `i << -> *U + :s 8C * -> -> 1 `i `x -> -> # *U :s 8C `i `x `i -> 1 `i 175  ]
{
[; ;decode_AX25.c: 198: dPacket[dPacketnum] = buf;
"198
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 199: dPacketnum ++;
"199
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 200: for(UINT j=0;j<8;j++){
"200
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 176  ]
[e $U 177  ]
[e :U 176 ]
{
[; ;decode_AX25.c: 201: flag_judge = getbit();
"201
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 202: buf = buf >> 1;
"202
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 203: if(flag_judge == 0){
"203
[e $ ! == _flag_judge -> -> 0 `i `ui 179  ]
{
[; ;decode_AX25.c: 204: buf = buf | 0x00;
"204
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"205
}
[; ;decode_AX25.c: 205: }else{
[e $U 180  ]
[e :U 179 ]
{
[; ;decode_AX25.c: 206: buf = buf | 0x80;
"206
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"207
}
[e :U 180 ]
"208
}
"200
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 176  ]
[e :U 177 ]
"208
}
[; ;decode_AX25.c: 207: }
[; ;decode_AX25.c: 208: }
[; ;decode_AX25.c: 209: if(buf == ("JQ1YCZ"[2] << 1)){
"209
[e $ ! == -> _buf `i << -> *U + :s 9C * -> -> 2 `i `x -> -> # *U :s 9C `i `x `i -> 1 `i 181  ]
{
[; ;decode_AX25.c: 210: dPacket[dPacketnum] = buf;
"210
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 211: dPacketnum ++;
"211
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 212: for(UINT j=0;j<8;j++){
"212
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 182  ]
[e $U 183  ]
[e :U 182 ]
{
[; ;decode_AX25.c: 213: flag_judge = getbit();
"213
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 214: buf = buf >> 1;
"214
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 215: if(flag_judge == 0){
"215
[e $ ! == _flag_judge -> -> 0 `i `ui 185  ]
{
[; ;decode_AX25.c: 216: buf = buf | 0x00;
"216
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"217
}
[; ;decode_AX25.c: 217: }else{
[e $U 186  ]
[e :U 185 ]
{
[; ;decode_AX25.c: 218: buf = buf | 0x80;
"218
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"219
}
[e :U 186 ]
"220
}
"212
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 182  ]
[e :U 183 ]
"220
}
[; ;decode_AX25.c: 219: }
[; ;decode_AX25.c: 220: }
[; ;decode_AX25.c: 221: if(buf == ("JQ1YCZ"[3] << 1)){
"221
[e $ ! == -> _buf `i << -> *U + :s 10C * -> -> 3 `i `x -> -> # *U :s 10C `i `x `i -> 1 `i 187  ]
{
[; ;decode_AX25.c: 222: dPacket[dPacketnum] = buf;
"222
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 223: dPacketnum ++;
"223
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 224: for(UINT j=0;j<8;j++){
"224
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 188  ]
[e $U 189  ]
[e :U 188 ]
{
[; ;decode_AX25.c: 225: flag_judge = getbit();
"225
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 226: buf = buf >> 1;
"226
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 227: if(flag_judge == 0){
"227
[e $ ! == _flag_judge -> -> 0 `i `ui 191  ]
{
[; ;decode_AX25.c: 228: buf = buf | 0x00;
"228
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"229
}
[; ;decode_AX25.c: 229: }else{
[e $U 192  ]
[e :U 191 ]
{
[; ;decode_AX25.c: 230: buf = buf | 0x80;
"230
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"231
}
[e :U 192 ]
"232
}
"224
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 188  ]
[e :U 189 ]
"232
}
[; ;decode_AX25.c: 231: }
[; ;decode_AX25.c: 232: }
[; ;decode_AX25.c: 233: if(buf == ("JQ1YCZ"[4] << 1)){
"233
[e $ ! == -> _buf `i << -> *U + :s 11C * -> -> 4 `i `x -> -> # *U :s 11C `i `x `i -> 1 `i 193  ]
{
[; ;decode_AX25.c: 234: dPacket[dPacketnum] = buf;
"234
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 235: dPacketnum ++;
"235
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 236: for(UINT j=0;j<8;j++){
"236
{
[v _j `ui ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `ui ]
[e $ < _j -> -> 8 `i `ui 194  ]
[e $U 195  ]
[e :U 194 ]
{
[; ;decode_AX25.c: 237: flag_judge = getbit();
"237
[e = _flag_judge ( _getbit ..  ]
[; ;decode_AX25.c: 238: buf = buf >> 1;
"238
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 239: if(flag_judge == 0){
"239
[e $ ! == _flag_judge -> -> 0 `i `ui 197  ]
{
[; ;decode_AX25.c: 240: buf = buf | 0x00;
"240
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
"241
}
[; ;decode_AX25.c: 241: }else{
[e $U 198  ]
[e :U 197 ]
{
[; ;decode_AX25.c: 242: buf = buf | 0x80;
"242
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
"243
}
[e :U 198 ]
"244
}
"236
[e ++ _j -> -> 1 `i `ui ]
[e $ < _j -> -> 8 `i `ui 194  ]
[e :U 195 ]
"244
}
[; ;decode_AX25.c: 243: }
[; ;decode_AX25.c: 244: }
[; ;decode_AX25.c: 245: if(buf == ("JQ1YCZ"[5] << 1)){
"245
[e $ ! == -> _buf `i << -> *U + :s 12C * -> -> 5 `i `x -> -> # *U :s 12C `i `x `i -> 1 `i 199  ]
{
[; ;decode_AX25.c: 246: dPacket[dPacketnum] = buf;
"246
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 247: dPacketnum ++;
"247
[e ++ _dPacketnum -> -> 1 `i `ui ]
[; ;decode_AX25.c: 248: rcv_state ++;
"248
[e ++ _rcv_state -> -> 1 `i `ui ]
"249
}
[; ;decode_AX25.c: 249: }else{
[e $U 200  ]
[e :U 199 ]
{
[; ;decode_AX25.c: 250: dPacketnum = 0;
"250
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 251: rcv_state = 0;
"251
[e = _rcv_state -> -> 0 `i `ui ]
"252
}
[e :U 200 ]
"253
}
[; ;decode_AX25.c: 252: }
[; ;decode_AX25.c: 253: }else{
[e $U 201  ]
[e :U 193 ]
{
[; ;decode_AX25.c: 254: dPacketnum = 0;
"254
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 255: rcv_state = 0;
"255
[e = _rcv_state -> -> 0 `i `ui ]
"256
}
[e :U 201 ]
"257
}
[; ;decode_AX25.c: 256: }
[; ;decode_AX25.c: 257: }else{
[e $U 202  ]
[e :U 187 ]
{
[; ;decode_AX25.c: 258: dPacketnum = 0;
"258
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 259: rcv_state = 0;
"259
[e = _rcv_state -> -> 0 `i `ui ]
"260
}
[e :U 202 ]
"261
}
[; ;decode_AX25.c: 260: }
[; ;decode_AX25.c: 261: }else{
[e $U 203  ]
[e :U 181 ]
{
[; ;decode_AX25.c: 262: dPacketnum = 0;
"262
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 263: rcv_state = 0;
"263
[e = _rcv_state -> -> 0 `i `ui ]
"264
}
[e :U 203 ]
"265
}
[; ;decode_AX25.c: 264: }
[; ;decode_AX25.c: 265: }else{
[e $U 204  ]
[e :U 175 ]
{
[; ;decode_AX25.c: 266: dPacketnum = 0;
"266
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 267: rcv_state = 0;
"267
[e = _rcv_state -> -> 0 `i `ui ]
"268
}
[e :U 204 ]
"269
}
[; ;decode_AX25.c: 268: }
[; ;decode_AX25.c: 269: }else{
[e $U 205  ]
[e :U 169 ]
{
[; ;decode_AX25.c: 270: dPacketnum = 0;
"270
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 271: rcv_state = 0;
"271
[e = _rcv_state -> -> 0 `i `ui ]
"272
}
[e :U 205 ]
"273
}
[e :U 106 ]
"58
[e $ < _rcv_state -> -> 2 `i `ui 107  ]
[e :U 108 ]
[; ;decode_AX25.c: 272: }
[; ;decode_AX25.c: 273: }
[; ;decode_AX25.c: 274: }
"274
[e :UE 105 ]
}
"278
[v _getdata `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 278: void getdata(void){
[e :U _getdata ]
[f ]
"279
[v _buf `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 279: UBYTE buf = 0x00;
[e = _buf -> -> 0 `i `uc ]
"280
[v _dstuff `ui ~T0 @X0 1 a ]
[; ;decode_AX25.c: 280: UINT dstuff = 0;
[e = _dstuff -> -> 0 `i `ui ]
"281
[v _dammy_data `uc ~T0 @X0 1 a ]
"282
[v _bufstore_counter `ui ~T0 @X0 1 a ]
[; ;decode_AX25.c: 281: UBYTE dammy_data;
[; ;decode_AX25.c: 282: UINT bufstore_counter = 0;
[e = _bufstore_counter -> -> 0 `i `ui ]
"283
[v _dbitstatus `ui ~T0 @X0 1 a ]
[; ;decode_AX25.c: 283: UINT dbitstatus = 0;
[e = _dbitstatus -> -> 0 `i `ui ]
[; ;decode_AX25.c: 285: while(rcv_state == 2){
"285
[e $U 207  ]
[e :U 208 ]
{
[; ;decode_AX25.c: 286: dbitstatus = getbit();
"286
[e = _dbitstatus ( _getbit ..  ]
[; ;decode_AX25.c: 287: if(dstuff == 5){
"287
[e $ ! == _dstuff -> -> 5 `i `ui 210  ]
{
[; ;decode_AX25.c: 288: if(dbitstatus == 1){
"288
[e $ ! == _dbitstatus -> -> 1 `i `ui 211  ]
{
[; ;decode_AX25.c: 289: rcv_state ++;
"289
[e ++ _rcv_state -> -> 1 `i `ui ]
[; ;decode_AX25.c: 290: break;
"290
[e $U 209  ]
"291
}
[; ;decode_AX25.c: 291: }else{
[e $U 212  ]
[e :U 211 ]
{
[; ;decode_AX25.c: 292: dstuff = 0;
"292
[e = _dstuff -> -> 0 `i `ui ]
"293
}
[e :U 212 ]
"294
}
[; ;decode_AX25.c: 293: }
[; ;decode_AX25.c: 294: }else{
[e $U 213  ]
[e :U 210 ]
{
[; ;decode_AX25.c: 295: buf = buf >> 1;
"295
[e = _buf -> >> -> _buf `i -> 1 `i `uc ]
[; ;decode_AX25.c: 296: if(dbitstatus == 0){
"296
[e $ ! == _dbitstatus -> -> 0 `i `ui 214  ]
{
[; ;decode_AX25.c: 297: buf = buf | 0x00;
"297
[e = _buf -> | -> _buf `i -> 0 `i `uc ]
[; ;decode_AX25.c: 298: dstuff = 0;
"298
[e = _dstuff -> -> 0 `i `ui ]
"299
}
[; ;decode_AX25.c: 299: }else{
[e $U 215  ]
[e :U 214 ]
{
[; ;decode_AX25.c: 300: buf = buf | 0x80;
"300
[e = _buf -> | -> _buf `i -> 128 `i `uc ]
[; ;decode_AX25.c: 301: dstuff ++;
"301
[e ++ _dstuff -> -> 1 `i `ui ]
"302
}
[e :U 215 ]
[; ;decode_AX25.c: 302: }
[; ;decode_AX25.c: 303: bufstore_counter ++;
"303
[e ++ _bufstore_counter -> -> 1 `i `ui ]
[; ;decode_AX25.c: 304: if(bufstore_counter == 8){
"304
[e $ ! == _bufstore_counter -> -> 8 `i `ui 216  ]
{
[; ;decode_AX25.c: 305: bufstore_counter = 0;
"305
[e = _bufstore_counter -> -> 0 `i `ui ]
[; ;decode_AX25.c: 306: dPacket[dPacketnum] = buf;
"306
[e = *U + &U _dPacket * -> _dPacketnum `ux -> -> # *U &U _dPacket `ui `ux _buf ]
[; ;decode_AX25.c: 307: dPacketnum ++;
"307
[e ++ _dPacketnum -> -> 1 `i `ui ]
"308
}
[e :U 216 ]
"309
}
[e :U 213 ]
"310
}
[e :U 207 ]
"285
[e $ == _rcv_state -> -> 2 `i `ui 208  ]
[e :U 209 ]
[; ;decode_AX25.c: 308: }
[; ;decode_AX25.c: 309: }
[; ;decode_AX25.c: 310: }
[; ;decode_AX25.c: 311: }
"311
[e :UE 206 ]
}
"313
[v _fcscheck `(ui ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 313: UINT fcscheck(void){
[e :U _fcscheck ]
[f ]
"314
[v _bt `uc ~T0 @X0 1 a ]
[v _byte `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 314: UBYTE bt,byte;
[; ;decode_AX25.c: 315: dfcslo = dfcshi = 0xff;
"315
[e = _dfcslo = _dfcshi -> -> 255 `i `uc ]
[; ;decode_AX25.c: 316: while(rcv_state == 3){
"316
[e $U 218  ]
[e :U 219 ]
{
[; ;decode_AX25.c: 317: for(UINT i=0;i<dPacketnum-2;i++){
"317
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $U 224  ]
[e :U 221 ]
{
[; ;decode_AX25.c: 318: byte = dPacket[i];
"318
[e = _byte *U + &U _dPacket * -> _i `ux -> -> # *U &U _dPacket `ui `ux ]
[; ;decode_AX25.c: 319: for(UINT i=0;i<8;i++){
"319
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 225  ]
[e $U 226  ]
[e :U 225 ]
{
[; ;decode_AX25.c: 320: bt = byte & 0x01;
"320
[e = _bt -> & -> _byte `i -> 1 `i `uc ]
"322
[; <"                     BCF 03,0 ;# ">
"323
[; <"                     RRF _dfcshi,F ;# ">
"324
[; <"                     RRF _dfcslo,F ;# ">
[; ;decode_AX25.c: 326: if(((STATUS & 0x01)^bt) == 0x01){
"326
[e $ ! == ^ & -> _STATUS `i -> 1 `i -> _bt `i -> 1 `i 228  ]
{
[; ;decode_AX25.c: 327: dfcshi = dfcshi ^ 0x84;
"327
[e = _dfcshi -> ^ -> _dfcshi `i -> 132 `i `uc ]
[; ;decode_AX25.c: 328: dfcslo = dfcslo ^ 0x08;
"328
[e = _dfcslo -> ^ -> _dfcslo `i -> 8 `i `uc ]
"329
}
[e :U 228 ]
[; ;decode_AX25.c: 329: }
[; ;decode_AX25.c: 330: byte = byte >> 1;
"330
[e = _byte -> >> -> _byte `i -> 1 `i `uc ]
"331
}
"319
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 225  ]
[e :U 226 ]
"331
}
"332
}
"317
[e ++ _i -> -> 1 `i `ui ]
[e :U 224 ]
[e $ < _i - _dPacketnum -> -> 2 `i `ui 221  ]
[e :U 222 ]
"332
}
[; ;decode_AX25.c: 331: }
[; ;decode_AX25.c: 332: }
[; ;decode_AX25.c: 333: dfcslo = dfcslo ^ 0xff;
"333
[e = _dfcslo -> ^ -> _dfcslo `i -> 255 `i `uc ]
[; ;decode_AX25.c: 334: dfcshi = dfcshi ^ 0xff;
"334
[e = _dfcshi -> ^ -> _dfcshi `i -> 255 `i `uc ]
[; ;decode_AX25.c: 337: if((dPacket[dPacketnum-2] == dfcslo) && (dPacket[dPacketnum-1] == dfcshi)){
"337
[e $ ! && == -> *U + &U _dPacket * -> - _dPacketnum -> -> 2 `i `ui `ux -> -> # *U &U _dPacket `ui `ux `i -> _dfcslo `i == -> *U + &U _dPacket * -> - _dPacketnum -> -> 1 `i `ui `ux -> -> # *U &U _dPacket `ui `ux `i -> _dfcshi `i 229  ]
{
[; ;decode_AX25.c: 342: return 1;
"342
[e ) -> -> 1 `i `ui ]
[e $UE 217  ]
"343
}
[; ;decode_AX25.c: 343: }else{
[e $U 230  ]
[e :U 229 ]
{
[; ;decode_AX25.c: 348: return 0;
"348
[e ) -> -> 0 `i `ui ]
[e $UE 217  ]
"349
}
[e :U 230 ]
"350
}
[e :U 218 ]
"316
[e $ == _rcv_state -> -> 3 `i `ui 219  ]
[e :U 220 ]
[; ;decode_AX25.c: 349: }
[; ;decode_AX25.c: 350: }
[; ;decode_AX25.c: 351: }
"351
[e :UE 217 ]
}
"353
[v _ReceivePacket `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 353: void ReceivePacket(void){
[e :U _ReceivePacket ]
[f ]
[; ;decode_AX25.c: 354: waitFlag();
"354
[e ( _waitFlag ..  ]
[; ;decode_AX25.c: 355: getdata();
"355
[e ( _getdata ..  ]
[; ;decode_AX25.c: 356: fcscheck();
"356
[e ( _fcscheck ..  ]
[; ;decode_AX25.c: 357: }
"357
[e :UE 231 ]
}
"359
[v _ReceivePacket_data `(*uc ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 359: UBYTE *ReceivePacket_data(void){
[e :U _ReceivePacket_data ]
[f ]
"360
[v _fcschecker `ui ~T0 @X0 1 a ]
[; ;decode_AX25.c: 360: UINT fcschecker;
[; ;decode_AX25.c: 363: waitFlag();
"363
[e ( _waitFlag ..  ]
[; ;decode_AX25.c: 365: getdata();
"365
[e ( _getdata ..  ]
[; ;decode_AX25.c: 367: fcschecker = fcscheck();
"367
[e = _fcschecker ( _fcscheck ..  ]
[; ;decode_AX25.c: 369: if(fcschecker == 1){
"369
[e $ ! == _fcschecker -> -> 1 `i `ui 233  ]
{
[; ;decode_AX25.c: 373: for(UINT i=0; i<32; i++){
"373
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 32 `i `ui 234  ]
[e $U 235  ]
[e :U 234 ]
{
[; ;decode_AX25.c: 374: dData[i] = dPacket[i+22];
"374
[e = *U + &U _dData * -> _i `ux -> -> # *U &U _dData `ui `ux *U + &U _dPacket * -> + _i -> -> 22 `i `ui `ux -> -> # *U &U _dPacket `ui `ux ]
"375
}
"373
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 32 `i `ui 234  ]
[e :U 235 ]
"375
}
[; ;decode_AX25.c: 375: }
[; ;decode_AX25.c: 376: dPacketnum = 0;
"376
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 377: rcv_state = 0;
"377
[e = _rcv_state -> -> 0 `i `ui ]
[; ;decode_AX25.c: 378: return dData;
"378
[e ) &U _dData ]
[e $UE 232  ]
"379
}
[; ;decode_AX25.c: 379: }else{
[e $U 237  ]
[e :U 233 ]
{
[; ;decode_AX25.c: 380: dPacketnum = 0;
"380
[e = _dPacketnum -> -> 0 `i `ui ]
[; ;decode_AX25.c: 381: rcv_state = 0;
"381
[e = _rcv_state -> -> 0 `i `ui ]
[; ;decode_AX25.c: 382: return 0x00;
"382
[e ) -> -> 0 `i `*uc ]
[e $UE 232  ]
"383
}
[e :U 237 ]
[; ;decode_AX25.c: 383: }
[; ;decode_AX25.c: 384: }
"384
[e :UE 232 ]
}
"387
[v _putAX25 `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 387: void putAX25(void){
[e :U _putAX25 ]
[f ]
[; ;decode_AX25.c: 388: for(UINT i=0;i<6;i++){
"388
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 6 `i `ui 239  ]
[e $U 240  ]
[e :U 239 ]
{
[; ;decode_AX25.c: 389: dPacket[i] = dPacket[i] >> 1;
"389
[e = *U + &U _dPacket * -> _i `ux -> -> # *U &U _dPacket `ui `ux -> >> -> *U + &U _dPacket * -> _i `ux -> -> # *U &U _dPacket `ui `ux `i -> 1 `i `uc ]
[; ;decode_AX25.c: 390: dPacket[i+7] = dPacket[i+7] >> 1;
"390
[e = *U + &U _dPacket * -> + _i -> -> 7 `i `ui `ux -> -> # *U &U _dPacket `ui `ux -> >> -> *U + &U _dPacket * -> + _i -> -> 7 `i `ui `ux -> -> # *U &U _dPacket `ui `ux `i -> 1 `i `uc ]
"391
}
"388
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 6 `i `ui 239  ]
[e :U 240 ]
"391
}
[; ;decode_AX25.c: 391: }
[; ;decode_AX25.c: 392: for(UINT i=0;i<6;i++){
"392
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 6 `i `ui 242  ]
[e $U 243  ]
[e :U 242 ]
{
[; ;decode_AX25.c: 393: putch(dPacket[i]);
"393
[e ( _putch (1 *U + &U _dPacket * -> _i `ux -> -> # *U &U _dPacket `ui `ux ]
"394
}
"392
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 6 `i `ui 242  ]
[e :U 243 ]
"394
}
[; ;decode_AX25.c: 394: }
[; ;decode_AX25.c: 395: putch('>');
"395
[e ( _putch (1 -> -> 62 `ui `uc ]
[; ;decode_AX25.c: 396: for(UINT i=0;i<6;i++){
"396
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 6 `i `ui 245  ]
[e $U 246  ]
[e :U 245 ]
{
[; ;decode_AX25.c: 397: putch(dPacket[i+7]);
"397
[e ( _putch (1 *U + &U _dPacket * -> + _i -> -> 7 `i `ui `ux -> -> # *U &U _dPacket `ui `ux ]
"398
}
"396
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 6 `i `ui 245  ]
[e :U 246 ]
"398
}
[; ;decode_AX25.c: 398: }
[; ;decode_AX25.c: 399: putch(':');
"399
[e ( _putch (1 -> -> 58 `ui `uc ]
[; ;decode_AX25.c: 400: for(UINT i=0;i<dPacketnum-18;i++){
"400
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $U 251  ]
[e :U 248 ]
{
[; ;decode_AX25.c: 401: putch(dPacket[i+16]);
"401
[e ( _putch (1 *U + &U _dPacket * -> + _i -> -> 16 `i `ui `ux -> -> # *U &U _dPacket `ui `ux ]
"402
}
"400
[e ++ _i -> -> 1 `i `ui ]
[e :U 251 ]
[e $ < _i - _dPacketnum -> -> 18 `i `ui 248  ]
[e :U 249 ]
"402
}
[; ;decode_AX25.c: 402: }
[; ;decode_AX25.c: 403: return;
"403
[e $UE 238  ]
[; ;decode_AX25.c: 404: }
"404
[e :UE 238 ]
}
"407
[v _conv_DI_UARTRX `(v ~T0 @X0 1 ef ]
{
[; ;decode_AX25.c: 407: void conv_DI_UARTRX(void){
[e :U _conv_DI_UARTRX ]
[f ]
"408
[v _buf_dammy `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 408: UBYTE buf_dammy = 0x00;
[e = _buf_dammy -> -> 0 `i `uc ]
"409
[v _buf `uc ~T0 @X0 1 a ]
[; ;decode_AX25.c: 409: UBYTE buf = 0x00;
[e = _buf -> -> 0 `i `uc ]
[; ;decode_AX25.c: 411: getbit();
"411
[e ( _getbit ..  ]
[; ;decode_AX25.c: 412: while(RB5 == 0){
"412
[e $U 253  ]
[e :U 254 ]
{
[; ;decode_AX25.c: 413: for(UINT i=0;i<8;i++){
"413
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 8 `i `ui 256  ]
[e $U 257  ]
[e :U 256 ]
{
[; ;decode_AX25.c: 414: getbit();
"414
[e ( _getbit ..  ]
[; ;decode_AX25.c: 415: buf_dammy = buf_dammy << 1;
"415
[e = _buf_dammy -> << -> _buf_dammy `i -> 1 `i `uc ]
[; ;decode_AX25.c: 416: if(RB5 == 0){
"416
[e $ ! == -> _RB5 `i -> 0 `i 259  ]
{
[; ;decode_AX25.c: 417: buf_dammy = buf_dammy | 0x00;
"417
[e = _buf_dammy -> | -> _buf_dammy `i -> 0 `i `uc ]
"418
}
[; ;decode_AX25.c: 418: }else{
[e $U 260  ]
[e :U 259 ]
{
[; ;decode_AX25.c: 419: buf_dammy = buf_dammy | 0x01;
"419
[e = _buf_dammy -> | -> _buf_dammy `i -> 1 `i `uc ]
"420
}
[e :U 260 ]
"421
}
"413
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 8 `i `ui 256  ]
[e :U 257 ]
"421
}
[; ;decode_AX25.c: 420: }
[; ;decode_AX25.c: 421: }
[; ;decode_AX25.c: 422: getbit();
"422
[e ( _getbit ..  ]
[; ;decode_AX25.c: 423: buf = reverse_bit8(buf_dammy);
"423
[e = _buf ( _reverse_bit8 (1 _buf_dammy ]
[; ;decode_AX25.c: 424: putch(buf);
"424
[e ( _putch (1 _buf ]
"425
}
[e :U 253 ]
"412
[e $ == -> _RB5 `i -> 0 `i 254  ]
[e :U 255 ]
[; ;decode_AX25.c: 425: }
[; ;decode_AX25.c: 426: }
"426
[e :UE 252 ]
}
"429
[v _reverse_bit8 `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;decode_AX25.c: 429: UBYTE reverse_bit8(UBYTE x){
[e :U _reverse_bit8 ]
[v _x `uc ~T0 @X0 1 r1 ]
[f ]
[; ;decode_AX25.c: 430: x = ((x & 0x55) << 1) | ((x & 0xAA) >> 1);
"430
[e = _x -> | << & -> _x `i -> 85 `i -> 1 `i >> & -> _x `i -> 170 `i -> 1 `i `uc ]
[; ;decode_AX25.c: 431: x = ((x & 0x33) << 2) | ((x & 0xCC) >> 2);
"431
[e = _x -> | << & -> _x `i -> 51 `i -> 2 `i >> & -> _x `i -> 204 `i -> 2 `i `uc ]
[; ;decode_AX25.c: 432: return (x << 4) | (x >> 4);
"432
[e ) -> | << -> _x `i -> 4 `i >> -> _x `i -> 4 `i `uc ]
[e $UE 261  ]
[; ;decode_AX25.c: 433: }
"433
[e :UE 261 ]
}
[a 7C 74 81 49 89 67 90 0 ]
[a 8C 74 81 49 89 67 90 0 ]
[a 9C 74 81 49 89 67 90 0 ]
[a 10C 74 81 49 89 67 90 0 ]
[a 11C 74 81 49 89 67 90 0 ]
[a 12C 74 81 49 89 67 90 0 ]
[a 1C 74 83 49 89 65 88 0 ]
[a 2C 74 83 49 89 65 88 0 ]
[a 3C 74 83 49 89 65 88 0 ]
[a 4C 74 83 49 89 65 88 0 ]
[a 5C 74 83 49 89 65 88 0 ]
[a 6C 74 83 49 89 65 88 0 ]
